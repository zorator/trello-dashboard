{"version":3,"sources":["services/trello-api.js","services/useStorage.hook.js","components/NavBar.js","components/Anchors.js","components/Card.js","components/Board.js","components/Organization.js","components/Organizations.js","App.js","index.js","components/Board.module.css","components/Card.module.css","components/Organization.module.css","config.js"],"names":["callApi","url","params","urlParams","URLSearchParams","key","Trello","token","fetch","method","mode","referrerPolicy","headers","then","res","json","memberPromiseMap","_groupByKey","datas","mapper","a","reduce","result","data","value","getHierarchy","organizations","lists","boards","cards","cardsByList","completeBoards","map","board","forEach","list","id","boardsByOrganization","allOrganizations","orga","leftBoards","Array","prototype","concat","apply","Object","values","length","push","displayName","getMember","undefined","useStorage","storageKey","initialState","sessionItem","localStorage","getItem","previousState","JSON","parse","useState","setValue","useEffect","setItem","stringify","removeItem","NavBar","onFilterChange","visible","setVisible","treeData","setTreeData","filter","setFilter","title","className","children","name","includes","type","onClick","placement","onClose","selectable","checkable","checkedKeys","onCheck","AnchorsLink","element","Link","href","style","whiteSpace","icon","child","Anchors","offsetTop","Card","isFirst","members","setMembers","table","idMembers","idMember","TrelloApi","member","fetchMembers","labels","styles","join","target","rel","label","color","dir","avatarUrl","height","width","src","alt","fullName","username","initials","CardListName","Board","cardContainer","flatMap","card","index","Organization","Organizations","organization","App","loading","setLoading","setOrganization","filteredOrganization","setFilteredOrganizations","Header","position","zIndex","marginTop","minHeight","Sider","padding","background","Content","active","Footer","ReactDOM","render","StrictMode","apiKey","Config","api_key","clientVersion","apiEndpoint","authEndpoint","intentEndpoint","authorizeName","authorizeType","authorizeOnSuccess","console","log","authorizeOnError","autoAuthorize","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3879771c.chunk.js","sourcesContent":["import {Trello} from \"react-trello-client\";\n\n// we keep this dirty way to call the api, because the lib can't handle custom query params nor Promises 😥\nconst callApi = (url, params) => {\n    const urlParams = new URLSearchParams({...params, key: Trello.key(), token: Trello.token()})\n    return fetch('https://api.trello.com/1/' + url + '?' + urlParams, {\n        method: 'GET',\n        mode: 'cors',\n        referrerPolicy: 'no-referrer',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    }).then(res => res.json());\n}\n\nlet memberPromiseMap = {}\n\nconst getMember = (id) => {\n    if (memberPromiseMap[id] === undefined) {\n        memberPromiseMap[id] = callApi(\"members/\" + id);\n    }\n    return memberPromiseMap[id]\n}\nconst _getMyCards = () => callApi('members/me/cards')\nconst _getMyBoards = () => callApi('members/me/boards', {lists: 'open'})\nconst _getMyOrganizations = () => callApi('members/me/organizations')\n\nconst _groupByKey = (datas, key, mapper = a => a) => datas.reduce((result, data) => {\n    let value = data[key]\n    result[value] = [...result[value] || [], mapper(data)];\n    return result;\n}, {})\n\nconst getHierarchy = async () => {\n    // fetch all data from user\n    const organizations = await _getMyOrganizations()\n    const boards = await _getMyBoards()\n    const cards = await _getMyCards()\n\n    // inject all cards into lists\n    const cardsByList = _groupByKey(cards, 'idList')\n    const completeBoards = boards.map(board => {\n        board.lists.forEach(list => {\n            list.cards = cardsByList[list.id] || []\n        })\n        return board\n    })\n    // Build board map by organization id\n    let boardsByOrganization = _groupByKey(completeBoards, 'idOrganization')\n    // Inject all boards into organization\n    let allOrganizations = organizations.map(orga => {\n        orga.boards = boardsByOrganization[orga.id] || []\n        // remove boards from map in order to leave 'orphan' boards\n        delete boardsByOrganization[orga.id]\n        return orga\n    })\n    // Add boards were user is member, but not member's of the organization\n    let leftBoards = Array.prototype.concat.apply([], Object.values(boardsByOrganization))\n    if (leftBoards.length > 0) {\n        allOrganizations.push({\n            id: 'private',\n            displayName: 'Private Organization',\n            boards: leftBoards\n        })\n    }\n    return allOrganizations\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    getHierarchy,\n    getMember\n}\n","import { useEffect, useState } from 'react'\n\nfunction useStorage(\n    storageKey,\n    initialState\n){\n    let sessionItem = localStorage.getItem(storageKey);\n    let previousState = sessionItem ? JSON.parse(sessionItem) : initialState;\n    const [value, setValue] = useState(previousState);\n\n    useEffect(() => {\n        if (value) {\n            localStorage.setItem(storageKey, JSON.stringify(value))\n        } else {\n            localStorage.removeItem(storageKey)\n        }\n    }, [storageKey, value]);\n\n    return [value, setValue]\n}\n\nexport default useStorage\n","import {useEffect, useState} from \"react\";\nimport {Button, Drawer, Tree} from \"antd\";\nimport useStorage from \"../services/useStorage.hook\";\n\nfunction NavBar({organizations, onFilterChange}) {\n\n    const [visible, setVisible] = useState(false)\n    const [treeData, setTreeData] = useState([])\n    const [filter, setFilter] = useStorage('filter', [])\n\n    useEffect(() => {\n        setTreeData(organizations.map(orga => ({\n            title: <><span className=\"badge-icon icon-sm icon-organization\"/> {orga.displayName}</>,\n            key: orga.id,\n            children: orga.boards.map(board => ({\n                title: <><span className=\"badge-icon icon-sm icon-board\"/> {board.name}</>,\n                key: board.id,\n                children: board.lists.map(list => ({\n                    title: <><span className=\"badge-icon icon-sm icon-list\"/> {list.name}</>,\n                    key: list.id\n                }))\n            }))\n        })))\n    }, [organizations])\n\n    useEffect(() => {\n        onFilterChange(\n            organizations.map(orga => ({\n                ...orga, boards: orga.boards.map(board => ({\n                    // filter lists and empty lists\n                    ...board, lists: board.lists.filter(list => filter.includes(list.id))\n                                          .filter(list => list.cards.length > 0)\n                    // remove board without lists\n                })).filter(board => board.lists.length > 0)\n                // remove organization without boards\n            })).filter(orga => orga.boards.length > 0)\n        )\n    }, [onFilterChange, filter, organizations])\n\n    return <>\n        <Button type=\"primary\" onClick={() => setVisible(!visible)}>\n            Open Filter\n        </Button>\n        <Drawer title=\"Filter\" placement=\"left\" onClose={() => setVisible(false)} visible={visible}>\n            <Tree\n                selectable={false}\n                checkable\n                checkedKeys={filter}\n                onCheck={setFilter}\n                treeData={treeData}\n            />\n        </Drawer>\n    </>\n}\n\nexport default NavBar\n","import {useEffect, useState} from \"react\";\nimport {Anchor} from \"antd\";\n\nfunction AnchorsLink({element}) {\n    return <Anchor.Link\n        href={`#${element.key}`}\n        style={{whiteSpace: 'normal'}}\n        title={<>\n            <span className={`badge-icon icon-sm ${element.icon}`}/> {element.title}\n        </>}>\n        {(element.children || []).map(child => <AnchorsLink key={child.key} element={child}/>)}\n    </Anchor.Link>\n}\n\nfunction Anchors({organizations}) {\n\n    const [treeData, setTreeData] = useState([])\n\n    useEffect(() => {\n        setTreeData(organizations.map(orga => ({\n            title: orga.displayName,\n            key: orga.id,\n            icon: 'icon-organization',\n            children: orga.boards.map(board => ({\n                title: board.name,\n                key: board.id,\n                icon: 'icon-board',\n                children: board.lists.map(list => ({\n                    title: list.name,\n                    key: list.id,\n                    icon: 'icon-list'\n                }))\n            }))\n        })))\n    }, [organizations])\n\n    return <Anchor offsetTop={72}>\n        {treeData.map(element => <AnchorsLink element={element} key={element.key} />)}\n    </Anchor>\n}\n\nexport default Anchors\n","import styles from './Card.module.css'\nimport TrelloApi from \"../services/trello-api\";\nimport {useEffect, useState} from \"react\";\n\n\nfunction Card({data, list, isFirst}) {\n\n    const [members, setMembers] = useState([])\n\n    useEffect(() => {\n        async function fetchMembers() {\n            let table = []\n            for (let idMember of data.idMembers) {\n                const member = await TrelloApi.getMember(idMember)\n                table.push(member)\n            }\n            setMembers(table)\n        }\n\n        fetchMembers();\n    }, [data.idMembers])\n\n    const labels = data.labels || []\n    return (\n        <a className={[styles.Card, \"list-card\"].join(' ')} href={data.url} target=\"_blank\" rel=\"noreferrer\">\n            <div className=\"list-card-details\" id={isFirst ? list.id : null}>\n                <div className=\"list-card-labels\">\n                    {labels.map(label => <span key={label.id}\n                                               className={`card-label card-label-${label.color} mod-card-front`}\n                                               title={label.name}>\n                    <span className=\"label-text\">{label.name}</span>\n                </span>)}\n                </div>\n                <span className=\"list-card-title\" dir=\"auto\">{data.name}</span>\n                {/*<div className=\"badges\">\n                    <span className=\"js-badges\">\n                        <div className=\"badge js-checkitems-badge\" title=\"Éléments de checklist\">\n                        <span className=\"badge-icon icon-sm icon-checklist\"/>\n                        <span className=\"badge-text js-checkitems-badge-text\">0/3</span>\n                    </div>\n                    </span>\n                </div>*/}\n                <div className=\"list-card-members\">\n                    {members.map(member => <div key={member.id} className=\"member\">\n                            {member.avatarUrl ? <img\n                                    className=\"member-avatar\" height=\"30\" width=\"30\"\n                                    src={`${member.avatarUrl}/30.png`}\n                                    alt={`${member.fullName} (${member.username})`}\n                                    title={`${member.fullName} (${member.username})`}/>\n                                : <span className=\"member-initials\"\n                                        title={`${member.fullName} (${member.username})`}\n                                        aria-label={`${member.fullName} (${member.username})`}>{member.initials}</span>\n                            }\n                        </div>\n                    )}\n                </div>\n                {list ? <div className={styles.CardListName}>\n                    <span className=\"badge-icon icon-sm icon-list\"/> {list.name}\n                </div> : null}\n            </div>\n        </a>\n    );\n}\n\nexport default Card;\n","import styles from './Board.module.css'\nimport Card from \"./Card\";\n\nfunction Board({data}) {\n    return <div className={styles.Board} id={data.id}>\n        <h3><span className=\"badge-icon icon-sm icon-board\"/> <a href={data.url} target=\"_blank\" rel=\"noreferrer\">{data.name}</a></h3>\n        <div className={styles.cardContainer}>\n            {data.lists.flatMap(list =>\n                list.cards.map((card, index) =>\n                    <Card data={card} list={list} isFirst={index===0} key={card.id}/>\n                )\n            )}\n        </div>\n    </div>\n}\n\n\nexport default Board;\n","import Board from \"./Board\";\nimport styles from './Organization.module.css'\n\nexport function Organization({data}) {\n\n    return <div className={styles.Organization} id={data.id}>\n        <h2><span className=\"badge-icon icon-sm icon-organization\"/> <a href={data.url} target=\"_blank\" rel=\"noreferrer\">{data.displayName}</a></h2>\n        {data.boards.map((board) => <Board key={board.id} data={board}/>)}\n    </div>\n}\n","import {Result} from \"antd\";\nimport {Organization} from \"./Organization\";\n\nfunction Organizations({organizations}) {\n    return organizations.length === 0\n        ? <Result\n            title=\"No cards found, try adding some organizations / boards / lists from the filter panel\"/>\n        : organizations.map((organization) => <Organization key={organization.id}\n                                                            data={organization}/>)\n}\n\nexport default Organizations\n","import {useEffect, useState} from \"react\";\nimport TrelloApi from './services/trello-api'\nimport {Layout, Skeleton} from \"antd\";\nimport NavBar from \"./components/NavBar\";\nimport Anchors from \"./components/Anchors\";\nimport Organizations from \"./components/Organizations\";\n\nfunction App() {\n\n    const [loading, setLoading] = useState(true)\n    const [organizations, setOrganization] = useState([])\n    const [filteredOrganization, setFilteredOrganizations] = useState([])\n\n    useEffect(() => {\n        TrelloApi.getHierarchy().then(list => {\n            setOrganization(list)\n            setLoading(false)\n        })\n    }, [])\n\n    return (\n        <Layout>\n            <Layout.Header style={{position: 'fixed', zIndex: 1, width: '100%'}}>\n                <NavBar organizations={organizations} onFilterChange={setFilteredOrganizations}/>\n            </Layout.Header>\n            <Layout style={{marginTop: 64, minHeight: 'calc(100vh - 64px)'}}>\n                <Layout.Sider style={{padding: 8, background: '#fff'}}>\n                    <Anchors organizations={filteredOrganization}/>\n                </Layout.Sider>\n                <Layout>\n                    <Layout.Content className=\"body-card-label-text\" style={{padding: 8}}>\n                        <Skeleton active loading={loading}>\n                            <Organizations organizations={filteredOrganization} loading={loading}/>\n                        </Skeleton>\n                    </Layout.Content>\n                    <Layout.Footer>\n                        Made with 🍺 by <a href=\"https://github.com/zorator/trello-dashboard\">@zorator</a>\n                    </Layout.Footer>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './trello.css';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport Config from \"./config\";\nimport TrelloClient from \"react-trello-client\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <TrelloClient\n            apiKey={Config.api_key}\n            clientVersion={1}\n            apiEndpoint=\"https://api.trello.com\"\n            authEndpoint=\"https://trello.com\"\n            intentEndpoint=\"https://trello.com\"\n            authorizeName=\"Trello Dashboard\"\n            authorizeType=\"redirect\"\n            authorizeOnSuccess={() => console.log('Login successful!')}\n            authorizeOnError={() => console.log('Login error!')}\n            autoAuthorize={true}\n        />\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Board_cardContainer__8bmzk\",\"Board\":\"Board_Board__Zn9WF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1k9eP\",\"CardListName\":\"Card_CardListName__1s_mZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Organization\":\"Organization_Organization__Klhcw\"};","module.exports = {\n    api_key: 'eca89f23d50dfcceeda83f5dafb7f501'\n}\n"],"sourceRoot":""}